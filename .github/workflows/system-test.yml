name: system-test
on:
  workflow_call:
    inputs:
      version:
        description: 'Version released'
        required: true
        type: string

jobs:
  macos-intel-test:
    runs-on: macos-13
    steps:
    - name: Fetch repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: orbit-${{ inputs.version }}-x86_64-macos

    - name: Download checksums
      uses: actions/download-artifact@v4
      with:
        name: orbit-${{ inputs.version }}-checksums
      
    - name: Download sha256sum binary
      run: brew install coreutils

    - name: Verify contents
      run: grep $(/usr/local/opt/coreutils/libexec/gnubin/sha256sum orbit-${{ inputs.version }}-x86_64-macos.zip) orbit-${{ inputs.version }}-checksums.txt

    - name: Install Orbit
      run: |
        unzip ./orbit-${{ inputs.version }}-x86_64-macos.zip
        printf '\n\n' | ./orbit-${{ inputs.version }}-x86_64-macos/install

    - name: Test Orbit
      run: orbit --version

    - name: Test dynamic symbol transformation algorithm
      shell: bash
      run: cd ./tests/env/projects; ./dst.sh

    - name: Test topological sort
      shell: bash
      run: cd ./tests/env/min_order; ./run.sh

    - name: Test collecting associated files
      shell: bash
      run: cd ./tests/env/assoc_files; ./run.sh

    - name: Test .orbitpub hiding completely invisible files
      shell: bash
      run: cd ./tests/env/projects; ./pub.sh

  macos-arm-test:
    runs-on: macos-latest
    steps:
    - name: Fetch repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: orbit-${{ inputs.version }}-aarch64-macos

    - name: Download checksums
      uses: actions/download-artifact@v4
      with:
        name: orbit-${{ inputs.version }}-checksums
      
    - name: Download sha256sum binary
      run: brew install coreutils

    - name: Verify contents
      run: grep $(sha256sum orbit-${{ inputs.version }}-aarch64-macos.zip) orbit-${{ inputs.version }}-checksums.txt

    - name: Install Orbit
      run: |
        unzip ./orbit-${{ inputs.version }}-aarch64-macos.zip
        printf '\n\n' | ./orbit-${{ inputs.version }}-aarch64-macos/install

    - name: Test Orbit
      run: orbit --version

    - name: Test dynamic symbol transformation algorithm
      shell: bash
      run: cd ./tests/env/projects; ./dst.sh

    - name: Test topological sort
      shell: bash
      run: cd ./tests/env/min_order; ./run.sh

    - name: Test collecting associated files
      shell: bash
      run: cd ./tests/env/assoc_files; ./run.sh

    - name: Test .orbitpub hiding completely invisible files
      shell: bash
      run: cd ./tests/env/projects; ./pub.sh

  linux-test:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: orbit-${{ inputs.version }}-x86_64-linux

    - name: Download checksums
      uses: actions/download-artifact@v4
      with:
        name: orbit-${{ inputs.version }}-checksums

    - name: Verify contents
      run: grep $(sha256sum orbit-${{ inputs.version }}-x86_64-linux.zip) orbit-${{ inputs.version }}-checksums.txt

    - name: Install Orbit
      run: |
        unzip ./orbit-${{ inputs.version }}-x86_64-linux.zip
        printf '\n\n' | ./orbit-${{ inputs.version }}-x86_64-linux/install

    - name: Test Orbit
      run: orbit --version

    - name: Test dynamic symbol transformation algorithm
      shell: bash
      run: cd ./tests/env/projects; ./dst.sh

    - name: Test topological sort
      shell: bash
      run: cd ./tests/env/min_order; ./run.sh

    - name: Test collecting associated files
      shell: bash
      run: cd ./tests/env/assoc_files; ./run.sh

    - name: Test .orbitpub hiding completely invisible files
      shell: bash
      run: cd ./tests/env/projects; ./pub.sh
    
  windows-test:
    runs-on: windows-latest
    steps:
    - name: Fetch repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: orbit-${{ inputs.version }}-x86_64-windows

    - name: Install Orbit
      shell: bash
      run: |
        unzip ./orbit-${{ inputs.version }}-x86_64-windows.zip
        printf 'C:/users/runneradmin\n\n' | ./orbit-${{ inputs.version }}-x86_64-windows/install.exe 

    - name: Add Orbit to PATH
      shell: bash
      run: echo "C:/users/runneradmin/orbit/bin" >> $GITHUB_PATH

    - name: Test Orbit
      run: orbit --version

    - name: Test dynamic symbol transformation algorithm
      shell: bash
      run: cd ./tests/env/projects; ./dst.sh

    - name: Test topological sort
      shell: bash
      run: cd ./tests/env/min_order; ./run.sh

    - name: Test collecting associated files
      shell: bash
      run: cd ./tests/env/assoc_files; ./run.sh

    - name: Test .orbitpub hiding completely invisible files
      shell: bash
      run: cd ./tests/env/projects; ./pub.sh
