name: Docker
on:
  workflow_call:
    inputs:
      version:
        description: 'Version released'
        required: true
        type: string
      is_release:
        description: 'Is this commit a version being released'
        required: true
        type: string
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true

jobs:
  ship:
    strategy:
      matrix:
        target:
        - ubuntu-24.04
        - ubuntu-22.04
        include:
        - target: ubuntu-24.04
          os: ubuntu-latest
        - target: ubuntu-22.04
          os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true

      - name: Encode the build version
        if: ${{ inputs.is_release == '0' }}
        run: |
          echo "GIT_DESC_VERSION=$(git describe --tags)" >> $GITHUB_ENV

      - name: Encode the release version
        if: ${{ inputs.is_release == '1' }}
        run: |
          echo "GIT_DESC_VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push for latest
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/${{ matrix.target }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            REV=${{ github.sha }}
            GIT_DESC_VERSION=${{ env.GIT_DESC_VERSION }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/orbit:latest-${{ matrix.target }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/orbit:latest-${{ matrix.target }}
          cache-to: type=inline

      - name: Build and push for specific version
        if: ${{ inputs.is_release == '1' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/${{ matrix.target }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/orbit:${{ inputs.version }}-${{ matrix.target }}
          build-args: |
            REV=${{ github.sha }}
            GIT_DESC_VERSION=${{ env.GIT_DESC_VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/orbit:${{ inputs.version }}-${{ matrix.target }}
          cache-to: type=inline
  